/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.NhanVien;
import repo.NhanVienRepo;

/**
 *
 * @author admin
 */
public class NhanVienView extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private NhanVienRepo nhanVienRepo;
    private DefaultTableModel dtm;

    public NhanVienView() {
        initComponents();
        this.setLocationRelativeTo(null);
        nhanVienRepo = new NhanVienRepo();
        maNVAuto();
        loadTableNhanVien(0);

    }

    public void maNVAuto() {
        ArrayList<NhanVien> ds = nhanVienRepo.findAllNhanVien();
        if (ds.size() == 0) {
            txtMaNV.setText("NV001");
        } else {
            int viTriCuoi = ds.size() - 1;
            NhanVien nhanVien = ds.get(viTriCuoi);
            String maNV = nhanVien.getMaNV();
            int so = Integer.valueOf(maNV.substring(2));
            so++;
            String id = "NV00" + so;
            txtMaNV.setText(id);
        }

    }

    private void loadTableNhanVien(int trangThai) {
        ArrayList<NhanVien> ds = this.nhanVienRepo.findAllNhanVien();
        dtm = (DefaultTableModel) tblNhanVien.getModel();
        dtm.setRowCount(0);

        for (NhanVien a : ds) {
            if (trangThai == 0) {//        nếu truyền trạng thái bằng 0 thì sẽ hiển thị tất cả nhân viên
                Object[] row = {
                    a.getMaNV(), a.getHoTen(), a.getDiaChi(), a.getSdt(),
                    a.getEmail(), a.getGioiTinh() == 1 ? "Nữ" : "Nam",
                    a.getVaiTro() == 1 ? "Quản lý" : "Nhân viên",
                    a.getTrangThai() == 0 ? "Đang làm việc" : "Đã nghỉ việc"};
                dtm.addRow(row);
            } else if (trangThai == 1) {//        nếu truyền trạng thái bằng 1 thì sẽ hiển thị các nhân viên đã nghỉ việc
                if (a.getTrangThai() == 1) {
                    Object[] row = {
                        a.getMaNV(), a.getHoTen(), a.getDiaChi(), a.getSdt(),
                        a.getEmail(), a.getGioiTinh() == 1 ? "Nữ" : "Nam",
                        a.getVaiTro() == 1 ? "Quản lý" : "Nhân viên",
                        a.getTrangThai() == 0 ? "Đang làm việc" : "Đã nghỉ việc"};
                    dtm.addRow(row);
                }
            } else {//        nếu truyền trạng thái bằng 2 thì sẽ hiển thị các nhân viên đang làm việc
                if (a.getTrangThai() == 0) {
                    Object[] row = {
                        a.getMaNV(), a.getHoTen(), a.getDiaChi(), a.getSdt(),
                        a.getEmail(), a.getGioiTinh() == 1 ? "Nữ" : "Nam",
                        a.getVaiTro() == 1 ? "Quản lý" : "Nhân viên",
                        a.getTrangThai() == 0 ? "Đang làm việc" : "Đã nghỉ việc"};
                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGioiTinh = new javax.swing.ButtonGroup();
        jPasswordField1 = new javax.swing.JPasswordField();
        buttonGroupVaiTro = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btnThemNhanVien = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnChoNghiLam = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtMaNV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        rdoQuanLy = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        txtMatKhau = new javax.swing.JPasswordField();
        btnLoadMaNV = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 242, 248));
        jPanel2.setPreferredSize(new java.awt.Dimension(749, 608));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Form nhân viên"));
        jPanel3.setPreferredSize(new java.awt.Dimension(748, 608));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Mã nhân viên");
        jLabel11.setPreferredSize(new java.awt.Dimension(70, 32));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Họ tên");
        jLabel14.setPreferredSize(new java.awt.Dimension(36, 32));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Địa chỉ");
        jLabel24.setPreferredSize(new java.awt.Dimension(37, 32));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Số điện thoại");
        jLabel15.setPreferredSize(new java.awt.Dimension(0, 32));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("Email");
        jLabel29.setPreferredSize(new java.awt.Dimension(0, 32));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Giới tính");
        jLabel20.setPreferredSize(new java.awt.Dimension(0, 32));

        btnThemNhanVien.setText("Thêm");
        btnThemNhanVien.setPreferredSize(new java.awt.Dimension(100, 0));
        btnThemNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNhanVienActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setPreferredSize(new java.awt.Dimension(100, 0));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnChoNghiLam.setText("Cho nghỉ làm");
        btnChoNghiLam.setPreferredSize(new java.awt.Dimension(100, 0));
        btnChoNghiLam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoNghiLamActionPerformed(evt);
            }
        });

        btnClear.setText("Làm mới");
        btnClear.setPreferredSize(new java.awt.Dimension(100, 0));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtMaNV.setEditable(false);
        txtMaNV.setPreferredSize(new java.awt.Dimension(0, 32));

        txtHoTen.setPreferredSize(new java.awt.Dimension(0, 32));

        txtSDT.setPreferredSize(new java.awt.Dimension(0, 32));

        txtEmail.setPreferredSize(new java.awt.Dimension(0, 32));

        buttonGroupGioiTinh.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroupGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tên tài khoản");
        jLabel2.setPreferredSize(new java.awt.Dimension(71, 32));

        txtDiaChi.setPreferredSize(new java.awt.Dimension(0, 32));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Mật khẩu");
        jLabel3.setPreferredSize(new java.awt.Dimension(49, 32));

        txtTaiKhoan.setPreferredSize(new java.awt.Dimension(0, 32));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Vai trò");
        jLabel21.setPreferredSize(new java.awt.Dimension(0, 32));

        buttonGroupVaiTro.add(rdoQuanLy);
        rdoQuanLy.setText("Quản lý");

        buttonGroupVaiTro.add(rdoNhanVien);
        rdoNhanVien.setSelected(true);
        rdoNhanVien.setText("Nhân viên");

        txtMatKhau.setPreferredSize(new java.awt.Dimension(0, 32));

        btnLoadMaNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnLoadMaNV.setPreferredSize(new java.awt.Dimension(0, 30));
        btnLoadMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadMaNVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTaiKhoan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLoadMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThemNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnChoNghiLam, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdoNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdoQuanLy, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(59, 59, 59))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNhanVien)
                            .addComponent(rdoQuanLy)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLoadMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChoNghiLam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách nhân viên"));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Họ tên", "Địa chỉ", "Sđt", "Email", "Giới tính", "Chức vụ", "Trạng thái"
            }
        ));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setText("Trạng Thái");

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Đã nghỉ việc", "Đang làm việc" }));
        cboTrangThai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiItemStateChanged(evt);
            }
        });
        cboTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrangThaiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Mã / tên NV");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNhanVienActionPerformed
        NhanVien nv = getForm(1);
        if (nv == null) {
            return;
        }
        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm nhân viên không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (xacNhan == JOptionPane.YES_OPTION) {
            // Người dùng chọn YES
            nhanVienRepo.creat(nv);
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
            loadTableNhanVien(0);
            maNVAuto();
            clearForm();
        } else {
            // Người dùng chọn NO
            return;
        }
    }//GEN-LAST:event_btnThemNhanVienActionPerformed

    public void thongBao(String tb) {
        JOptionPane.showMessageDialog(this, tb, "Thông báo", JOptionPane.WARNING_MESSAGE);
    }

    private NhanVien getForm(int chucNang) {//  1 là thêm, 0 là sửa
        String maNV = txtMaNV.getText();
        String ten = txtHoTen.getText();
        String diaChi = txtDiaChi.getText();
        String taiKhoan = txtTaiKhoan.getText();
        String matKhau = new String(txtMatKhau.getPassword());
        String sdt = txtSDT.getText();
        String email = txtEmail.getText();
        int gioiTinh;
        if (rdoNam.isSelected()) {
            gioiTinh = 0;
        } else {
            gioiTinh = 1;
        }
        int vaiTro;
        if (rdoNhanVien.isSelected()) {
            vaiTro = 0;
        } else {
            vaiTro = 1;
        }
        int trangThai = 0;
        ArrayList<NhanVien> ds = nhanVienRepo.findAllNhanVien();
        if (chucNang == 0) {
            for (NhanVien nv : ds) {
                if (nv.getMaNV().equals(maNV)) {
                    trangThai = 1;
                    break;
                }
            }
        }

//      check maNV
        if (chucNang == 1) {
            int checkMaNV = 0;
            for (NhanVien nv : ds) {
                if (nv.getMaNV().equals(maNV)) {
                    checkMaNV = 1;
                    break;
                }
            }
            if (checkMaNV == 1) {
                thongBao("Mã nhân viên đã tồn tại!");
                return null;
            }
        }
//      check tenNV
        if (ten.trim().isBlank()) {
            thongBao("Tên nhân viên không được để trống!");
            return null;
        }
        if (ten.length() > 100) {
            thongBao("Tên không được dài quá 100 kí tự!");
            return null;
        }
//      check địa chỉ
        if (diaChi.trim().isBlank()) {
            thongBao("Địa chỉ không được để trống!");
            return null;
        }
//      check tài khoản
        if (taiKhoan.trim().isBlank()) {
            thongBao("Tài khoản không được để trống!");
            return null;
        }
        if (taiKhoan.length() > 255) {
            thongBao("Tài khoản không được dài quá 255 kí tự!");
            return null;
        }
        Pattern patternTaiKhoan = Pattern.compile("^[a-zA-Z0-9]+$");
        if (!patternTaiKhoan.matcher(taiKhoan).find()) {
            thongBao("Tài khoản không được chứa kí tự đặc biệt và khoảng trắng!");
            return null;
        }
        int checkTaiKhoan = 0;
        for (NhanVien nv : ds) {
            if (chucNang == 0) {
                if (nv.getTenTaiKhoan() == null) {
                    break;
                }
            }
            if (nv.getTenTaiKhoan().equals(taiKhoan)) {
                checkTaiKhoan = 1;
                break;
            }
        }
        if (checkTaiKhoan == 1) {
            thongBao("Tài khoản đã tồn tại!");
            return null;
        }
//      check mật khẩu
        if (matKhau.trim().isBlank()) {
            thongBao("Mật khẩu không được để trống!");
            return null;
        }
        if (matKhau.length() > 100) {
            thongBao("Mật khẩu không được dài quá 100 kí tự!");
            return null;
        }
//      check sdt
        if (sdt.trim().isBlank()) {
            thongBao("SĐT không được để trống!");
            return null;
        }
        if (sdt.length() > 10 || sdt.length() < 10) {
            thongBao("Số điện thoại phải bằng 10 kí tự!");
            return null;
        }
        Pattern patternSDT = Pattern.compile("^[0-9]+$");
        if (!patternSDT.matcher(sdt).find()) {
            thongBao("Số điện thoại phải là số!");
            return null;
        }
        int checkSDT = 0;
        for (NhanVien nv : ds) {
            if (chucNang == 0) {
                if (nv.getSdt() == null) {
                    break;
                }
            }

            if (nv.getSdt().equals(sdt)) {
                checkSDT = 1;
                break;
            }
        }
        if (checkSDT == 1) {
            thongBao("Số điện thoại đã tồn tại!");
            return null;
        }
//      check email
        if (email.trim().isBlank()) {
            thongBao("Email không được để trống!");
            return null;
        }
        if (email.length() > 100) {
            thongBao("Email không được dài quá 100 kí tự!");
            return null;
        }
        int checkEmail = 0;
        for (NhanVien nv : ds) {
            if (chucNang == 0) {
                if (nv.getEmail() == null) {
                    break;
                }
            }
            if (nv.getEmail().equals(email)) {
                checkEmail = 1;
                break;
            }
        }
        if (checkEmail == 1) {
            thongBao("Email đã tồn tại!");
            return null;
        }
        NhanVien nv = new NhanVien();
        nv.setMaNV(maNV);
        nv.setHoTen(ten);
        nv.setDiaChi(diaChi);
        nv.setSdt(sdt);
        nv.setEmail(email);
        nv.setGioiTinh(gioiTinh);
        nv.setMatKhau(matKhau);
        nv.setVaiTro(vaiTro);
        nv.setTrangThai(trangThai);
        nv.setTenTaiKhoan(taiKhoan);
        return nv;
    }
    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        int viTri = tblNhanVien.getSelectedRow();
        if (viTri == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 nhân viên trước ấn cập nhật!");
            return;
        }

        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cập nhật nhân viên này không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (xacNhan == JOptionPane.YES_OPTION) {
            // Người dùng chọn YES
            nhanVienRepo.updateTaiKhoan_Email_Sdt_VeNull((String) tblNhanVien.getValueAt(viTri, 0));
            NhanVien nv = getForm(0);
            if (nv == null) {
                return;
            }
            nhanVienRepo.update(nv);
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            loadTableNhanVien(0);
            clearForm();
            maNVAuto();
        } else {
            // Người dùng chọn NO
            return;
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnChoNghiLamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoNghiLamActionPerformed
        int viTri = tblNhanVien.getSelectedRow();
        if (viTri == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 nhân viên trước khi ấn cho nghỉ làm!");
            return;
        }
        if (btnChoNghiLam.getText().equals("Cho nghỉ làm")) {
            int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cho nhân viên này nghỉ làm không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (xacNhan == JOptionPane.YES_OPTION) {
                // Người dùng chọn YES
                nhanVienRepo.choNhanVienNghiLam((String) tblNhanVien.getValueAt(viTri, 0));
                JOptionPane.showMessageDialog(this, "Cho nghỉ làm thành công!");
                clearForm();
                loadTableNhanVien(0);
            } else {
                return;
            }
        } else {
            int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cho nhân viên này đi làm không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (xacNhan == JOptionPane.YES_OPTION) {
                // Người dùng chọn YES
                nhanVienRepo.choNhanVienDiLam((String) tblNhanVien.getValueAt(viTri, 0));
                JOptionPane.showMessageDialog(this, "Cho đi làm thành công!");
                clearForm();
                loadTableNhanVien(0);
            } else {
                return;
            }
        }

    }//GEN-LAST:event_btnChoNghiLamActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed
    private void clearForm() {
        maNVAuto();
        txtHoTen.setText("");
        txtDiaChi.setText("");
        txtTaiKhoan.setText("");
        txtMatKhau.setText("");
        txtSDT.setText("");
        txtEmail.setText("");
        rdoNam.setSelected(true);
        rdoNhanVien.setSelected(true);
        btnChoNghiLam.setText("Cho nghỉ làm");
        tblNhanVien.clearSelection();
    }
    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        int viTri = tblNhanVien.getSelectedRow();
        if (viTri == -1) {
            return;
        }

        txtMaNV.setText((String) tblNhanVien.getValueAt(viTri, 0));
        txtHoTen.setText((String) tblNhanVien.getValueAt(viTri, 1));
        txtDiaChi.setText((String) tblNhanVien.getValueAt(viTri, 2));
        txtSDT.setText((String) tblNhanVien.getValueAt(viTri, 3));
        txtEmail.setText((String) tblNhanVien.getValueAt(viTri, 4));
        ArrayList<NhanVien> ds = nhanVienRepo.findAllNhanVien();
        for (NhanVien n : ds) {
            if (n.getMaNV().equals(tblNhanVien.getValueAt(viTri, 0))) {
                txtTaiKhoan.setText(n.getTenTaiKhoan());
                txtMatKhau.setText(n.getMatKhau());
                if (n.getTrangThai() == 1) {
                    btnChoNghiLam.setText("Cho đi làm");
                } else {
                    btnChoNghiLam.setText("Cho nghỉ làm");
                }
                break;
            }
        }
        if (tblNhanVien.getValueAt(viTri, 5).equals("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        if (tblNhanVien.getValueAt(viTri, 6).equals("Nhân viên")) {
            rdoNhanVien.setSelected(true);
        } else {
            rdoQuanLy.setSelected(true);
        }
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed

    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cboTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrangThaiActionPerformed

    }//GEN-LAST:event_cboTrangThaiActionPerformed

    private void cboTrangThaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String trangThai = (String) cboTrangThai.getSelectedItem();
            if (trangThai == "Tất cả") {
                loadTableNhanVien(0);
            } else if (trangThai == "Đã nghỉ việc") {
                loadTableNhanVien(1);
            } else {
                loadTableNhanVien(2);
            }
        }
    }//GEN-LAST:event_cboTrangThaiItemStateChanged

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String searchText = txtTimKiem.getText();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dtm);
        tblNhanVien.setRowSorter(sorter);

        // Tạo hai bộ lọc: một cho mã nhân viên, một cho tên nhân viên
        RowFilter<DefaultTableModel, Object> rf1 = RowFilter.regexFilter("(?i)" + searchText, 0); // Giả sử cột 0 là Mã Nhân Viên
        RowFilter<DefaultTableModel, Object> rf2 = RowFilter.regexFilter("(?i)" + searchText, 1); // Giả sử cột 1 là Tên Nhân Viên

        // Kết hợp hai bộ lọc bằng RowFilter.orFilter
        List<RowFilter<DefaultTableModel, Object>> filters = new ArrayList<>(2);
        filters.add(rf1);
        filters.add(rf2);
        RowFilter<DefaultTableModel, Object> combinedFilter = RowFilter.orFilter(filters);

        sorter.setRowFilter(combinedFilter);
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnLoadMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadMaNVActionPerformed
        // TODO add your handling code here:
        maNVAuto();
    }//GEN-LAST:event_btnLoadMaNVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhanVienView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnChoNghiLam;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnLoadMaNV;
    private javax.swing.JButton btnThemNhanVien;
    private javax.swing.ButtonGroup buttonGroupGioiTinh;
    private javax.swing.ButtonGroup buttonGroupVaiTro;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTaiKhoan;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
